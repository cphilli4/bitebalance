# services:
#   bitebalancebackend:
#     restart: unless-stopped
#     env_file:
#       - .env
#     build:
#       context: ./
#       dockerfile: ./Dockerfile
#       labels:
#         - bitebalancebackend
#       args:
#         - stage=${STAGE:-none}
#     volumes:
#         - ./app:/app
#     entrypoint: "./entrypoint.sh"
#     command: "dev"
#     ports:
#       - ${PORT:-5000}:${PORT:-5000}

# Remove this and use only the backend service when you have a db hosted somewhere else.


services:
  bitebalancebackend:
    restart: unless-stopped
    env_file:
      - .env
    build:
      context: ./
      dockerfile: ./Dockerfile
      labels:
        - bitebalancebackend
      args:
        - stage=${STAGE:-none}
    volumes:
        - ./app:/app
        - ./uploads:/tmp/uploads
    entrypoint: "./entrypoint.sh"
    command: "dev"
    ports:
      - ${PORT:-5000}:${PORT:-5000}
    # depends_on:
    #   db:
    #     condition: service_healthy

#   db:
#     image: postgres:14-alpine
#     restart: unless-stopped
#     volumes:
#       - postgres_data:/var/lib/postgresql/data/
#       - ./db-init.sh:/docker-entrypoint-initdb.d/db-init.sh
#     healthcheck:
#       test: ["CMD-SHELL", "pg_isready -U postgres"]
#       interval: 5s
#       timeout: 5s
#       retries: 20
#     env_file:
#       - .env
#     environment:
#       - TZ=America/New_York
#     ports:
#       - 5432:5432

# volumes:
#   postgres_data:
